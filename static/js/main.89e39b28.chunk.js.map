{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weatherData","setWeatherData","city","setCity","className","placeholder","onChange","e","target","value","onKeyPress","event","key","fetch","then","response","json","data","main","name","Math","round","temp","weather","cod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAwDeA,MApDf,WAGE,IACA,EAAsCC,mBAAS,CAAC,KAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAeA,OACE,sBAAKC,UAAU,YAAf,UACE,uBACAA,UAAU,QACVC,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIJ,EAAQI,EAAEC,OAAOC,QAChCA,MAAOP,EACPQ,WApBe,SAACC,GACD,UAAdA,EAAMC,KACPC,MAAM,qDAAD,OAAsDX,EAAtD,iCANM,qCAMuFY,MAChG,SAAAC,GAAQ,OAAIA,EAASC,UACrBF,MACA,SAAAG,GACEhB,EAAegB,GACfd,EAAQ,UAeiB,qBAArBH,EAAYkB,KAClB,8BACE,8FAGF,sBAAKd,UAAU,eAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBJ,EAAYmB,OACjC,oBAAGf,UAAU,OAAb,UAAqBgB,KAAKC,MAAMrB,EAAYkB,KAAKI,MAAjD,WACA,mBAAGlB,UAAU,UAAb,SAAwBJ,EAAYuB,QAAQ,GAAGL,UAI9B,QAApBlB,EAAYwB,IACX,8DAEA,iCCpCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.89e39b28.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport './App.css'\n\nfunction  App(){\n\n\n  const apiKey = 'd850e7cc16f535a1a984c2ca7c3c5add'\n  const [weatherData, setWeatherData] = useState([{}])\n  const [city, setCity] = useState(\"\")\n\n  const getWeather = (event) => {\n    if(event.key === \"Enter\"){\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&APPID=${apiKey}`).then(\n        response => response.json()\n      ).then(\n        data => {\n          setWeatherData(data)\n          setCity(\"\")\n        }\n      )\n    }\n  }\n\n  return(\n    <div className=\"container\"> \n      <input \n      className=\"input\" \n      placeholder=\"Enter City\" \n      onChange={e => setCity(e.target.value)}\n      value={city}\n      onKeyPress={getWeather}\n      />\n      {typeof weatherData.main === 'undefined' ? (\n        <div>\n          <p>Welcome to weather app. Enter a city to get the weather of.</p>\n        </div>\n      ):(\n        <div className='weather-data'>\n          <p className='city'>{weatherData.name}</p>\n          <p className='temp'>{Math.round(weatherData.main.temp)}Â°F</p>\n          <p className='weather'>{weatherData.weather[0].main}</p>\n        </div>\n      )}\n\n      {weatherData.cod === \"404\" ? (\n        <p>City not found, search again.</p>\n      ):(\n        <>\n        </>\n      )}\n\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}